import discord
import random
import os
import requests
from discord.ext import commands
from model import get_class

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents)

estadisticas = [
    "La temperatura promedio global ha aumentado aproximadamente 1.1 ¬∞C desde la era preindustrial.",
    "M√°s del 70% de los glaciares del mundo han perdido masa en las √∫ltimas d√©cadas.",
    "Las emisiones de CO‚ÇÇ de la industria y transporte han aumentado m√°s del 50% desde 1990.",
    "Se estima que el nivel del mar ha subido unos 20 cm en el √∫ltimo siglo.",
    "Los incendios forestales han aumentado en frecuencia e intensidad debido al cambio clim√°tico.",
    " La producci√≥n agr√≠cola puede disminuir hasta un 25% en algunas regiones si no se toman medidas.",
    "M√°s de 2.2 mil millones de personas viven en zonas con escasez de agua.",
    "El cambio clim√°tico afecta la biodiversidad, con miles de especies en peligro de extinci√≥n."
]

retos = [
    "Recicla correctamente al menos 5 materiales diferentes hoy.",
    "Planta una planta o cuida una en tu entorno.",
    "Reutiliza botellas o envases en lugar de tirarlos.",
    "Comparte un consejo con tu familia o amigos.",
    "Apaga el aire acondicionado o calefacci√≥n si no es necesario.",
    "Reduce el consumo de agua durante tu ducha y lavado de platos.",
    "Comparte contenido educativo sobre cambio clim√°tico en redes sociales.",
    "Recoge basura cuando veas en la calle o en parques.",
    "Comparte transporte escolar o laboral para reducir emisiones."

]

infografias = [
    "inf1.png",
    "inf2.png",
    "inf3.png",
    "inf4.png",
    "inf5.png"
]


consejos = [
    " Usar bombillas LED y apagar luces/electrodom√©sticos que no est√©s usando.",
    " Evitar dejar cargadores o aparatos en stand-by (siguen consumiendo energ√≠a).",
    " Usa bicicleta o transporte p√∫blico para disminuir emisiones.",
    " Mejorar el aislamiento de tu casa para necesitar menos calefacci√≥n o aire acondicionado.",
    " Ahorrar agua: duchas m√°s cortas, cerrar el grifo al lavarse los dientes.",
    " Si se puede, optar por autos el√©ctricos o h√≠bridos.",
    " Apostar por productos locales y de temporada (menos transporte = menos emisiones).",
    " Evitar el desperdicio de comida: planificar compras y aprovechar sobras.",
    " Reutilizar bolsas, botellas y envases.",
    " Reciclar papel, vidrio, pl√°sticos y metales.",
    " Comprar menos cosas innecesarias (cada producto tiene una huella de carbono).",
    " Apostar por productos duraderos en lugar de desechables.",
]


preguntas_de_trivia = [
    {
        "pregunta": "¬øCu√°l es el principal gas responsable del efecto invernadero?",
        "opciones": ["A) Ox√≠geno", "B) Di√≥xido de carbono (CO‚ÇÇ)", "C) Nitr√≥geno", "D) Arg√≥n"],
        "respuesta": "B"
    },
    {
        "pregunta": "¬øQu√© energ√≠a renovable proviene del sol?",
        "opciones": ["A) E√≥lica", "B) Geot√©rmica", "C) Solar", "D) Hidroel√©ctrica"],
        "respuesta": "C"
    },
    {
        "pregunta": "¬øQu√© capa de la atm√≥sfera nos protege de los rayos UV?",
        "opciones": ["A) Estrat√≥sfera", "B) Ozono", "C) Troposfera", "D) Ionosfera"],
        "respuesta": "B"
    },
     {
        "pregunta": "¬øQu√© fen√≥meno ocurre cuando los glaciares se derriten?",
        "opciones": ["A) Sequ√≠as", "B) Huracanes", "C) Aumento del nivel del mar", "D) Tornados"],
        "respuesta": "C"
    },
    {
        "pregunta": "¬øCu√°l es un efecto directo del calentamiento global?",
        "opciones": ["A) Reducci√≥n del CO‚ÇÇ", "B) Derretimiento de glaciares", "C) Menor nivel del mar", "D) M√°s hielo polar"],
        "respuesta": "B"
    },
    {
        "pregunta": "¬øQu√© pr√°ctica ayuda a reducir la emisi√≥n de gases contaminantes?",
        "opciones": ["A) Usar transporte p√∫blico o bicicleta", "B) Encender m√°s aparatos electr√≥nicos", "C) Usar solo el auto", "D) Tirar basura al r√≠o"],
        "respuesta": "A"
    },
    {
        "pregunta": "¬øQu√© es la huella de carbono?",
        "opciones": ["A) Cantidad de basura producida", "B) Gases de efecto invernadero emitidos", "C) Agua consumida", "D) Energ√≠a solar utilizada"],
        "respuesta": "B"
    },
    {
        "pregunta": "¬øQu√© tipo de energ√≠a contribuye menos al cambio clim√°tico?",
        "opciones": ["A) Carb√≥n", "B) Petr√≥leo", "C) Solar", "D) Gas natural"],
        "respuesta": "C"
    },
    {
        "pregunta": "¬øCu√°l es el acuerdo internacional para limitar el calentamiento global a menos de 2 ¬∞C?",
        "opciones": ["A) Protocolo de Kyoto", "B) Acuerdo de Par√≠s", "C) Convenio de Montreal", "D) Tratado de Kioto"],
        "respuesta": "B"
    }
]


noticias = [
    "https://news.un.org/es/story/2025/09/1540404",
    "https://news.un.org/es/story/2025/09/1540399",
    "https://news.un.org/es/story/2025/09/1540393",
    "https://news.un.org/es/story/2025/08/1540366",
    "https://news.un.org/es/story/2025/08/1540362"
]


def get_weather(city: str)->str:
    base_url = f"https://wttr.in/{city}?format=%C+%t"
    response = requests.get(base_url)

    if response.status_code == 200:
        return response.text.strip()
    else:
        return "Intentalo mas tarde"

@bot.event
async def on_ready():
    print(f'We have logged in as {bot.user}')


@bot.command()
async def hola(ctx):
    await ctx.send(f"üëã ¬°Hola!Soy Ambiental bot, un bot creado en Python para hablar sobre uno de los temas m√°s importantes de nuestro tiempo: el cambio clim√°tico. üåç.Proponer retos y trivias para aprender jugando.Darte consejos pr√°cticos para reducir tu huella ecol√≥gica.Mostrar datos y curiosidades para que juntos entendamos mejor c√≥mo cuidarlo. A continuacion escribe !comandos para poder ver todos los comandos de este bot y probarlos")


@bot.command()
async def comandos(ctx):
    await ctx.send("""
**Gu√≠a de comandos del bot**

**!info** ‚Üí Explica qu√© es el cambio clim√°tico y sus principales causas.  
**!problematicas** ‚Üí Muestra los problemas m√°s graves que genera el cambio clim√°tico y sugiere recursos visuales.  
**!infografia** ‚Üí Env√≠a una infograf√≠a con informaci√≥n visual.  
**!verificar** ‚Üí Analiza una imagen con IA e identifica el material presente.  
**!materiales_impacto** ‚Üí Explica el da√±o ambiental de distintos materiales y c√≥mo reducirlo.  
**!consejo** ‚Üí Da un consejo pr√°ctico para cuidar el ambiente.  
**!reto** ‚Üí Propone un reto ecol√≥gico para cumplir en el d√≠a.  
**!estadistica** ‚Üí Muestra una estad√≠stica real sobre el cambio clim√°tico.  
**!video** ‚Üí Comparte un video educativo sobre el cambio clim√°tico.  
**!trivia** ‚Üí Lanza una pregunta de opci√≥n m√∫ltiple sobre temas ambientales.  
**!clima <ciudad>** ‚Üí Devuelve el clima actual en la ciudad indicada.
**!noticia** ‚Üí Enlace a una noticia reciente sobre cambio clim√°tico.
    """)

@bot.command()
async def info(ctx):
    await ctx.send(f"El cambio clim√°tico se refiere a las variaciones a largo plazo en los patrones del clima de la Tierra, principalmente causadas por la actividad humana. La quema de combustibles f√≥siles (como carb√≥n, petr√≥leo y gas) y la deforestaci√≥n liberan grandes cantidades de gases de efecto invernadero, especialmente di√≥xido de carbono (CO‚ÇÇ), que atrapan el calor en la atm√≥sfera.")
                   


@bot.command()
async def problematicas(ctx):
    await ctx.send(f'Los problemas del cambio clim√°tico incluyen el aumento de la temperatura global, la intensificaci√≥n de fen√≥menos meteorol√≥gicos extremos como sequ√≠as e inundaciones, el aumento del nivel del mar y el deshielo de los polos, la disminuci√≥n de la biodiversidad, la inseguridad alimentaria, problemas de salud y la pobreza. Estos efectos impactan el medio ambiente, la salud humana y las sociedades, y est√°n vinculados al aumento de los gases de efecto invernadero por la actividad humana. ¬øQuieres algun video o infografia que lo explique?, si es asi usa el comando !infografia o !video')

@bot.command()
async def infografia(ctx):
    infografia = random.choice(infografias)
    ruta = os.path.join("images", infografia)
    with open(ruta, 'rb') as f:
        picture = discord.File(f)
        print(os.listdir("images"))
    await ctx.send(file=picture)


@bot.command()
async def verificar(ctx):
    if ctx.message.attachments:
        for attachment in ctx.message.attachments:
            file_name = attachment.filename
            file_url = attachment.url
            await attachment.save(f"./{attachment.filename}")
            await ctx.send(f"Guarda la imagen en ./{attachment.filename}")
            await ctx.send(get_class(model_path="keras_model.h5", labels_path="labels.txt", image_path=f"./{attachment.filename}"))
            await ctx.send(f"si quieres conocer el impacto de cada material que reconezco escribe el comando !materiales_impacto")
    else:
        await ctx.send("Olvidaste subir la imagen :(")    
    
   
@bot.command()
async def materiales_impacto(ctx):
        await ctx.send("Impacto de los materiales en el ambiente:")
        await ctx.send("Pl√°sticos:\nPersisten siglos en el ambiente, contaminan oc√©anos y liberan micropl√°sticos.\nSugerencia: Reducir, reutilizar y reciclar; evitar pl√°sticos de un solo uso.")
        await ctx.send("Metales:\nSu extracci√≥n genera contaminaci√≥n y residuos t√≥xicos.\nSugerencia: Reciclar metales y elegir productos duraderos.")
        await ctx.send("Qu√≠micos:\nPueden contaminar agua y suelos, afectando ecosistemas y salud.\nSugerencia: Usar alternativas seguras y tratar residuos correctamente.")
        await ctx.send("Combustibles f√≥siles:\nAl quemarse liberan CO‚ÇÇ, agravando el cambio clim√°tico.\nSugerencia: Promover energ√≠as renovables y eficiencia energ√©tica.")
        await ctx.send("Telas (textiles):\nLa industria textil consume agua y qu√≠micos; las fibras sint√©ticas contaminan oc√©anos.\nSugerencia: Comprar menos, elegir fibras sostenibles y reciclar ropa.")
        await ctx.send("Cart√≥n:\nSu producci√≥n usa agua y energ√≠a, y si no se recicla ocupa espacio en vertederos.\nSugerencia: Reutilizar y reciclar cajas de cart√≥n.")
        await ctx.send("Vidrio:\nSu fabricaci√≥n consume energ√≠a, pero es 100% reciclable.\nSugerencia: Preferir envases retornables y reciclar vidrio.")
        await ctx.send("Papel:\nContribuye a la deforestaci√≥n si no proviene de fuentes sostenibles.\nSugerencia: Reducir impresiones y usar papel reciclado.")


@bot.command()
async def consejo(ctx):
    consejo_elegido = random.choice(consejos)
    await ctx.send(f"consejo: {consejo_elegido}")


@bot.command()
async def reto(ctx):
    reto = random.choice(retos)
    await ctx.send(f"Tu reto del d√≠a: \n{reto}")


@bot.command()
async def estadistica(ctx):
    estadistica = random.choice(estadisticas)
    await ctx.send(f"Estad√≠stica: {estadistica}")


@bot.command()
async def video(ctx):
    videos = [
        "https://youtu.be/miEJI0XQiN4",
        "https://youtu.be/LKNVNXHYzS0",
        "https://youtu.be/JQHtjT-_c7U",
        "https://youtu.be/IXQ5_RX5Bgo",
        "https://youtu.be/5kBMHvvWlcs",
        "https://youtu.be/wNQ5wvGmnEk",
        "https://youtu.be/hoD3ghHhqq8",
        "https://youtu.be/gbuIWr-XHsc"
    ]
    video_elegido = random.choice(videos)
    await ctx.send("Mira este video sobre el cambio clim√°tico:")
    await ctx.send(video_elegido)



@bot.command()
async def noticia(ctx):
    noticia_elegida = random.choice(noticias)
    await ctx.send(f"Noticia sobre cambio clim√°tico:{noticia_elegida}")


@bot.command(name="trivia")
async def trivia(ctx):
    # Elegir una pregunta aleatoria
    pregunta = random.choice(preguntas_de_trivia)
    opciones_texto = "\n".join(pregunta["opciones"])

    await ctx.send(f"üåç **Trivia Clim√°tica** \n\n{pregunta['pregunta']}\n{opciones_texto}\n\n Responde con la letra (A, B, C o D).")

    # Esperar respuesta del usuario
    respuesta = await bot.wait_for("message")

    if respuesta.content.upper() == pregunta["respuesta"]:
        await ctx.send("‚úÖ ¬°Correcto! üéâ")
    else:
        await ctx.send(f"‚ùå Incorrecto. La respuesta correcta era **{pregunta['respuesta']}**.")


@bot.command()
async def clima(ctx,*,city: str):
    weather_info = get_weather(city)
    await ctx.send(f"clima en {city}: {weather_info}")

bot.run("")